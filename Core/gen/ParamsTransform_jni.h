
// This file is autogenerated by
//     /Users/dli/Documents/lynx/lynx-native/lynx/build/jni_generator.py
// For
//     com/lynx/core/base/ParamsTransform

#ifndef com_lynx_core_base_ParamsTransform_JNI
#define com_lynx_core_base_ParamsTransform_JNI

#include <jni.h>

#include "base/android/android_jni.h"

// Step 1: forward declarations.
namespace {
const char kParamsTransformClassPath[] = "com/lynx/core/base/ParamsTransform";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_ParamsTransform_clazz = NULL;
#define ParamsTransform_clazz(env) g_ParamsTransform_clazz

}  // namespace

// Step 2: method stubs.

static intptr_t g_ParamsTransform_transformJLS_LJLO = 0;
static base::android::ScopedLocalJavaRef<jstring>
    Java_ParamsTransform_transformJLS_LJLO(JNIEnv* env, jobjectArray params) {
  /* Must call RegisterNativesImpl()  */
  //CHECK_CLAZZ(env, ParamsTransform_clazz(env),
  //    ParamsTransform_clazz(env), NULL);
  jmethodID method_id =
      base::android::GetMethod(
      env, ParamsTransform_clazz(env),
      base::android::STATIC_METHOD,
      "transform",

"("
"[Ljava/lang/Object;"
")"
"Ljava/lang/String;",
      &g_ParamsTransform_transformJLS_LJLO);

  jstring ret =
static_cast<jstring>(env->CallStaticObjectMethod(ParamsTransform_clazz(env),
          method_id, params));
  base::android::CheckException(env);
  return base::android::ScopedLocalJavaRef<jstring>(env, ret);
}

static intptr_t g_ParamsTransform_transformJLS_JLO = 0;
static base::android::ScopedLocalJavaRef<jstring>
    Java_ParamsTransform_transformJLS_JLO(JNIEnv* env, jobject param) {
  /* Must call RegisterNativesImpl()  */
  //CHECK_CLAZZ(env, ParamsTransform_clazz(env),
  //    ParamsTransform_clazz(env), NULL);
  jmethodID method_id =
      base::android::GetMethod(
      env, ParamsTransform_clazz(env),
      base::android::STATIC_METHOD,
      "transform",

"("
"Ljava/lang/Object;"
")"
"Ljava/lang/String;",
      &g_ParamsTransform_transformJLS_JLO);

  jstring ret =
static_cast<jstring>(env->CallStaticObjectMethod(ParamsTransform_clazz(env),
          method_id, param));
  base::android::CheckException(env);
  return base::android::ScopedLocalJavaRef<jstring>(env, ret);
}

// Step 3: RegisterNatives.

static bool RegisterNativesImpl(JNIEnv* env) {

  g_ParamsTransform_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kParamsTransformClassPath).Get()));

  return true;
}

#endif  // com_lynx_core_base_ParamsTransform_JNI
