
// This file is autogenerated by
//     /Users/dli/Documents/lynx/lynx-native/lynx/build/jni_generator.py
// For
//     com/lynx/core/base/LynxFunctionObject

#ifndef com_lynx_core_base_LynxFunctionObject_JNI
#define com_lynx_core_base_LynxFunctionObject_JNI

#include <jni.h>

#include "base/android/android_jni.h"

// Step 1: forward declarations.
namespace {
const char kLynxFunctionObjectClassPath[] =
    "com/lynx/core/base/LynxFunctionObject";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_LynxFunctionObject_clazz = NULL;
#define LynxFunctionObject_clazz(env) g_LynxFunctionObject_clazz

}  // namespace

// Step 2: method stubs.

static intptr_t g_LynxFunctionObject_getMethodNameArray = 0;
static base::android::ScopedLocalJavaRef<jobject>
    Java_LynxFunctionObject_getMethodNameArray(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  //CHECK_CLAZZ(env, obj,
  //    LynxFunctionObject_clazz(env), NULL);
  jmethodID method_id =
      base::android::GetMethod(
      env, LynxFunctionObject_clazz(env),
      base::android::INSTANCE_METHOD,
      "getMethodNameArray",

"("
")"
"Ljava/lang/Object;",
      &g_LynxFunctionObject_getMethodNameArray);

  jobject ret =
      env->CallObjectMethod(obj,
          method_id);
  base::android::CheckException(env);
  return base::android::ScopedLocalJavaRef<jobject>(env, ret);
}

static intptr_t g_LynxFunctionObject_exec = 0;
static base::android::ScopedLocalJavaRef<jobject>
    Java_LynxFunctionObject_exec(JNIEnv* env, jobject obj, jstring methodName,
    jobjectArray args) {
  /* Must call RegisterNativesImpl()  */
  //CHECK_CLAZZ(env, obj,
  //    LynxFunctionObject_clazz(env), NULL);
  jmethodID method_id =
      base::android::GetMethod(
      env, LynxFunctionObject_clazz(env),
      base::android::INSTANCE_METHOD,
      "exec",

"("
"Ljava/lang/String;"
"[Ljava/lang/Object;"
")"
"Ljava/lang/Object;",
      &g_LynxFunctionObject_exec);

  jobject ret =
      env->CallObjectMethod(obj,
          method_id, methodName, args);
  base::android::CheckException(env);
  return base::android::ScopedLocalJavaRef<jobject>(env, ret);
}

static intptr_t g_LynxFunctionObject_destroy = 0;
static void Java_LynxFunctionObject_destroy(JNIEnv* env, jobject obj) {
  /* Must call RegisterNativesImpl()  */
  //CHECK_CLAZZ(env, obj,
  //    LynxFunctionObject_clazz(env));
  jmethodID method_id =
      base::android::GetMethod(
      env, LynxFunctionObject_clazz(env),
      base::android::INSTANCE_METHOD,
      "destroy",

"("
")"
"V",
      &g_LynxFunctionObject_destroy);

     env->CallVoidMethod(obj,
          method_id);
  base::android::CheckException(env);

}

// Step 3: RegisterNatives.

static bool RegisterNativesImpl(JNIEnv* env) {

  g_LynxFunctionObject_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kLynxFunctionObjectClassPath).Get()));

  return true;
}

#endif  // com_lynx_core_base_LynxFunctionObject_JNI
