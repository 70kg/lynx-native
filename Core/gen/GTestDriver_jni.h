
// This file is autogenerated by
//     /Users/dli/Documents/lynx/lynx-native/lynx/build/jni_generator.py
// For
//     com/lynx/gtest/GTestDriver

#ifndef com_lynx_gtest_GTestDriver_JNI
#define com_lynx_gtest_GTestDriver_JNI

#include <jni.h>

#include "base/android/android_jni.h"

// Step 1: forward declarations.
namespace {
const char kGTestDriverClassPath[] = "com/lynx/gtest/GTestDriver";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_GTestDriver_clazz = NULL;
#define GTestDriver_clazz(env) g_GTestDriver_clazz

}  // namespace

static jint RunGTestsNative(JNIEnv* env, jclass jcaller,
    jobjectArray gtestCmdLineArgs);

// Step 2: method stubs.

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsGTestDriver[] = {
    { "nativeRunGTestsNative",
"("
"[Ljava/lang/String;"
")"
"I", reinterpret_cast<void*>(RunGTestsNative) },
};

static bool RegisterNativesImpl(JNIEnv* env) {

  g_GTestDriver_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kGTestDriverClassPath).Get()));

  const int kMethodsGTestDriverSize =
      sizeof(kMethodsGTestDriver)/sizeof(kMethodsGTestDriver[0]);

  if (env->RegisterNatives(GTestDriver_clazz(env),
                           kMethodsGTestDriver,
                           kMethodsGTestDriverSize) < 0) {
    //jni_generator::HandleRegistrationError(
    //    env, GTestDriver_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // com_lynx_gtest_GTestDriver_JNI
